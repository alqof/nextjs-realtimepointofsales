import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/components/providers/theme-provider";
import AuthStoreProvider from "@/components/providers/auth-store-provider";
import { cookies } from "next/headers";
import ReactQueryProvider from "@/components/providers/react-query-provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "QopzKuy",
  description: "Generated by create next app",
};

export default async function RootLayout({children}: Readonly<{children: React.ReactNode}>) {
  // get cookies
  const cookiesStore = await cookies();
  const profile = JSON.parse(cookiesStore.get('user_profile')?.value ?? '{}');
  console.log(profile)

  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <AuthStoreProvider profile={profile}>
          <ReactQueryProvider>
            <ThemeProvider
              attribute="class"
              defaultTheme="system"
              enableSystem
              disableTransitionOnChange
            >
              {children}
            </ThemeProvider>
          </ReactQueryProvider>
        </AuthStoreProvider>
      </body>
    </html>
  );
}
